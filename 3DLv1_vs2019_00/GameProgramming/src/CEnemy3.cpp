#include "CEnemy3.h"

#define OBJ "res\\f16.obj"	//モデルのファイル
#define MTL "res\\f16.mtl"	//モデルのマテリアルファイル

CModel CEnemy3::sModel;	//モデルデータ作成

//デフォルトコンストラクタ
CEnemy3::CEnemy3()
{
}

//CEnemy(位置, 回転, 拡縮)
CEnemy3::CEnemy3()
	: CCharacter3(1)
	,mCollider(this,&mMatrix,CVector(0.0f,0.0f,0.0f),0.4f)

	{
		//モデルが無いときは読み込む
		if (sModel.Triangles().size() == 0)
		{
			sModel.Load(OBJ, MTL);
		}
		//モデルのポインタ設定
		mpModel = &sModel;
	}
//コンストラクタ
//CEnemy3(位置, 回転, 拡縮)
CEnemy3::CEnemy3(const CVector& position
	, const CVector& rotation, const CVector& scale)
	: CEnemy3()	//デフォルトコンストラクタを実行する
{
	//位置、回転、拡縮を設定する
	mPosition = position;	//位置の設定
	mRotation = rotation;	//回転の設定
	mScale = scale;	//拡縮の設定
	CTransform::Update();	//行列の更新
}


//更新処理
void CEnemy3::Update()
{
}

//衝突処理
//Collision(コライダ1, コライダ2)
void CEnemy3::Collision(CCollider* m, CCollider* o)
{
}

void CEnemy3::Collision()
{
}

